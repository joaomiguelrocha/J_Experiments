# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #push:
  #  branches: [ main ]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "run_tests"
  run_tests1:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # make a test job call
      - uses: octokit/request-action@v2.x
        id: run_test_job_1
        with:
          route: GET https://joao-rocha.outsystemscloud.com/BDDTestSuiteManager/rest/v1/TriggerTestRun?TestJobId={testjob_id}&ReportType=junit
          # owner: joaomiguelrocha
          testjob_id: 1
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: "echo ${{ steps.run_test_job_1.outputs.data }} > results.xml"
      # store results as artifact
      - name: store results
        uses: actions/upload-artifact@v2
        with:
          name: report1
          path: results.xml

  run_tests2:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # make a test job call
      - uses: octokit/request-action@v2.x
        id: run_test_job_2
        with:
          route: GET https://joao-rocha.outsystemscloud.com/BDDTestSuiteManager/rest/v1/TriggerTestRun?TestJobId={testjob_id}&ReportType=junit
          owner: joaomiguelrocha
          testjob_id: 2
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: "echo ${{ steps.run_test_job_1.outputs.data }} > results2.xml"
      - name: store results
        uses: actions/upload-artifact@v2
        with:
          name: report2
          path: results2.xml

  run_tests3:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # make a test job call
      - uses: octokit/request-action@v2.x
        id: run_test_job_3
        with:
          route: GET https://joao-rocha.outsystemscloud.com/BDDTestSuiteManager/rest/v1/TriggerTestRun?TestJobId={testjob_id}&ReportType=junit
          owner: joaomiguelrocha
          testjob_id: 3
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: "echo ${{ steps.run_test_job_1.outputs.data }} > results3.xml"
      
      - name: store results
        uses: actions/upload-artifact@v2
        with:
          name: report3
          path: results3.xml

  merge_and_publish_reports:
    needs: [run_tests1, run_tests2, run_tests3]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # example from https://github.com/bhovhannes/junit-report-merger/blob/master/.github/workflows/main.yml
    strategy:
      matrix:
        node-version: [14.x]

    env:
      RESULTS_PATH: combined_report.xml
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
        #store empty combined_report
        - run: "echo '' > ${{ env.RESULTS_PATH }}"
        - name: store results
          uses: actions/upload-artifact@v2
          with:
            name: combinedReport
            path: ${{ env.RESULTS_PATH }}
        # setup node 
        - uses: actions/checkout@v2
          name: Use Node.js ${{ matrix.node-version }}
        - uses: actions/setup-node@v2
          with:
            node-version: ${{ matrix.node-version }}
        # setup junit report merger:
        - run: npm install -g junit-report-merger
        # download testRun reports      
        - uses: actions/download-artifact@v2
          with:
            name: report1
        - uses: actions/download-artifact@v2
          with:
            name: report2
        - uses: actions/download-artifact@v2
          with:
            name: report3
            #path: ${{ env.RESULTS_PATH}}
        - run: ls -R
        # merge results into main merged report:
        - run: jrm ${{ env.RESULTS_PATH}} "results.xml" "results2.xml" "results3.xml"
        # publish merged report
        - name: publish report
          uses: EnricoMi/publish-unit-test-result-action@v1.7
          if: always()
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            report_individual_runs: true
            files: ${{ env.RESULTS_PATH }}
